{"version":3,"file":"static/js/249.4c05377c.chunk.js","mappings":"2KAAaA,G,QAAc,SAAAC,GAI1B,OAHIA,EAAQ,KACXA,EAAQA,EAAMC,WAAWC,SAAS,EAAG,MAE/BF,I,SCQR,MAVA,WACC,MCAsB,WACtB,OAAwBG,EAAAA,EAAAA,UAAS,IAAIC,MAArC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAQC,aAAY,WACzBH,EAAQ,IAAIF,QACV,KAEH,OAAO,kBAAMM,cAAcF,MACzB,IAKI,CAAEG,KAHIZ,EAAYM,EAAKO,YAGfC,OAFAd,EAAYM,EAAKS,eDZPC,GAAjBJ,EAAR,EAAQA,KAAME,EAAd,EAAcA,OAEd,OACC,+BACC,eAAIG,UAAU,wGAAd,mBAA0HL,EAA1H,YAAkIE,QEKrI,MAVA,WACC,MCAsB,WACtB,OAAwBV,EAAAA,EAAAA,UAAS,IAAIC,MAArC,eAAOa,EAAP,KAAaC,EAAb,MAEAX,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAQC,aAAY,WACzBS,EAAQ,IAAId,QACV,KAEH,OAAO,kBAAMM,cAAcF,MACzB,IAEH,IACIW,EAAMF,EAAKG,mBAAmB,QADlB,CAAEC,QAAS,UAIvBC,EAAQL,EAAKG,mBAAmB,QADlB,CAAEE,MAAO,UAGvBC,EAAQN,EAAKO,UACXC,EAAOR,EAAKS,cAKlB,OAHA3B,EAAYoB,GACZpB,EAAYkB,GAEL,CAAEE,IAAAA,EAAKI,MAAAA,EAAOD,MAAAA,EAAOG,KAAAA,GDvBQE,GAA5BR,EAAR,EAAQA,IAAKI,EAAb,EAAaA,MAAOD,EAApB,EAAoBA,MAAOG,EAA3B,EAA2BA,KAE3B,OACC,+BACC,eAAIT,UAAU,iGAAd,mBAAmHG,EAAnH,aAA2HI,EAA3H,YAAoID,EAApI,aAA8IG,QEKjJ,MATA,WACC,OACC,qBAAST,UAAU,wKAAnB,WACC,SAAC,EAAD,KACA,SAAC,EAAD","sources":["data/reusableData.js","components/time/Time.jsx","hooks/useTime.js","components/date/Date.jsx","hooks/useDate.js","containers/time/DateTimeContainer.jsx"],"sourcesContent":["export const checkFormat = index => {\r\n\tif (index < 10) {\r\n\t\tindex = index.toString().padStart(2, '0')\r\n\t}\r\n\treturn index\r\n}\r\n\r\nexport const getRandom = async (array, number) => {\r\n\tlet result = await new Array(number),\r\n\t\tlength = array.length,\r\n\t\ttaken = new Array(length)\r\n\t// if (number > length)\r\n\t// \tthrow new RangeError('getRandom: more elements taken than available')\r\n\twhile (number--) {\r\n\t\tlet x = Math.floor(Math.random() * length)\r\n\t\tresult[number] = array[x in taken ? taken[x] : x]\r\n\t\ttaken[x] = --length in taken ? taken[length] : length\r\n\t}\r\n\treturn result\r\n}\r\n\r\nexport const bookmarkData = () => [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Youtube',\r\n\t\turl: 'https://www.youtube.com',\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'Netflix',\r\n\t\turl: 'https://www.netlfix.com',\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'LinkedIn',\r\n\t\turl: 'https://www.linkedin.com',\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: 'Gmail',\r\n\t\turl: 'https://www.gmail.com',\r\n\t},\r\n]\r\n","import { useTime } from '../../hooks/useTime'\r\n\r\nfunction Time() {\r\n\tconst { hour, minute } = useTime()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className='text-center text-3xl transition md:text-5xl xl:text-6xl text-teal-light font-semi-bold font-ropa-sans'>{`${hour}:${minute}`}</h2>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Time\r\n","import { useState, useEffect } from 'react'\r\nimport { checkFormat } from '../data/reusableData'\r\n\r\nexport const useTime = () => {\r\n\tconst [time, setTime] = useState(new Date())\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTime(new Date())\r\n\t\t}, 1000)\r\n\r\n\t\treturn () => clearInterval(timer)\r\n\t}, [])\r\n\r\n\tconst hour = checkFormat(time.getHours())\r\n\tconst minute = checkFormat(time.getMinutes())\r\n\r\n\treturn { hour, minute }\r\n}\r\n","import { useDate } from '../../hooks/useDate'\r\n\r\nfunction Date() {\r\n\tconst { day, today, month, year } = useDate()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='text-lg text-center text-white transition-all sm:text-2xl md:text-3xl xl:text-3xl font-poppins'>{`${day}, ${today} ${month}, ${year}`}</h3>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Date\r\n","import { useState, useEffect } from 'react'\r\nimport { checkFormat } from '../data/reusableData'\r\n\r\nexport const useDate = () => {\r\n\tconst [date, setDate] = useState(new Date())\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetDate(new Date())\r\n\t\t}, 50000)\r\n\r\n\t\treturn () => clearInterval(timer)\r\n\t}, [])\r\n\r\n\tlet dayFormat = { weekday: 'short' }\r\n\tlet day = date.toLocaleDateString('en-US', dayFormat)\r\n\r\n\tlet monthFormat = { month: 'short' }\r\n\tlet month = date.toLocaleDateString('en-US', monthFormat)\r\n\r\n\tlet today = date.getDate()\r\n\tconst year = date.getFullYear()\r\n\r\n\tcheckFormat(day)\r\n\tcheckFormat(date)\r\n\r\n\treturn { day, today, month, year }\r\n}\r\n","import Time from '../../components/time/Time'\r\nimport Date from '../../components/date/Date'\r\n\r\nfunction DateTimeContainer() {\r\n\treturn (\r\n\t\t<section className='flex flex-col items-center justify-center row-start-2 row-end-3 gap-2 col-span-full md:col-start-1 md:col-end-4 dashboard-card lg:order-1 lg:col-start-1 lg:col-end-3'>\r\n\t\t\t<Time />\r\n\t\t\t<Date />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default DateTimeContainer\r\n"],"names":["checkFormat","index","toString","padStart","useState","Date","time","setTime","useEffect","timer","setInterval","clearInterval","hour","getHours","minute","getMinutes","useTime","className","date","setDate","day","toLocaleDateString","weekday","month","today","getDate","year","getFullYear","useDate"],"sourceRoot":""}